{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lenovo\\\\Desktop\\\\Formations\\\\react-projects\\\\markdown-app\\\\src\\\\App.js\";\nimport './App.css';\nimport React, { Component } from 'react';\nimport marked from 'marked';\nimport { sampleText } from './sampleText';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      text: sampleText\n    };\n\n    this.handleChange = event => {\n      const text = event.target.value;\n      this.setState({\n        text\n      });\n    };\n\n    this.renderText = text => {\n      const __html = marked(text, {\n        sanitize: true\n      });\n\n      return {\n        __html\n      };\n    };\n  }\n\n  // quand le Component est monté, vas chercher le texte dans le localStorage\n  componentDidMount() {\n    const text = localStorage.getItem('text'); // Si le texte n'existe pas (complètement effacé), alors réaffiche le texte du début\n\n    if (text) {\n      this.setState({\n        text\n      });\n    } else {\n      this.setState({\n        text: sampleText\n      });\n    }\n\n    this.setState({\n      text\n    });\n  } // à chaque mise à jour du Component, enregistre le contenu du texte en temps réel dans le localStorage\n\n\n  componentDidUpdate() {\n    const {\n      text\n    } = this.state;\n    localStorage.setItem('text', text);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-sm-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"textarea\", {\n      onChange: this.handleChange,\n      value: this.state.text,\n      className: \"form-control\",\n      rows: \"35\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-sm-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      dangerouslySetInnerHTML: this.renderText(this.state.text),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/lenovo/Desktop/Formations/react-projects/markdown-app/src/App.js"],"names":["React","Component","marked","sampleText","App","state","text","handleChange","event","target","value","setState","renderText","__html","sanitize","componentDidMount","localStorage","getItem","componentDidUpdate","setItem","render"],"mappings":";AAAA,OAAO,WAAP;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,SAASC,UAAT,QAA2B,cAA3B;;AAEA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BI,KAD0B,GAClB;AACNC,MAAAA,IAAI,EAAEH;AADA,KADkB;;AAAA,SAwB1BI,YAxB0B,GAwBXC,KAAK,IAAI;AACtB,YAAMF,IAAI,GAAGE,KAAK,CAACC,MAAN,CAAaC,KAA1B;AACA,WAAKC,QAAL,CAAc;AAAEL,QAAAA;AAAF,OAAd;AACD,KA3ByB;;AAAA,SA4B1BM,UA5B0B,GA4BbN,IAAI,IAAI;AACnB,YAAMO,MAAM,GAAGX,MAAM,CAACI,IAAD,EAAO;AAAEQ,QAAAA,QAAQ,EAAE;AAAZ,OAAP,CAArB;;AACA,aAAO;AAAED,QAAAA;AAAF,OAAP;AACD,KA/ByB;AAAA;;AAK1B;AACAE,EAAAA,iBAAiB,GAAG;AAClB,UAAMT,IAAI,GAAGU,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAb,CADkB,CAElB;;AACA,QAAIX,IAAJ,EAAU;AACR,WAAKK,QAAL,CAAc;AAAEL,QAAAA;AAAF,OAAd;AACD,KAFD,MAEO;AACL,WAAKK,QAAL,CAAc;AAAEL,QAAAA,IAAI,EAAEH;AAAR,OAAd;AACD;;AAED,SAAKQ,QAAL,CAAc;AAAEL,MAAAA;AAAF,KAAd;AACD,GAhByB,CAkB1B;;;AACAY,EAAAA,kBAAkB,GAAG;AACnB,UAAM;AAAEZ,MAAAA;AAAF,QAAW,KAAKD,KAAtB;AACAW,IAAAA,YAAY,CAACG,OAAb,CAAqB,MAArB,EAA6Bb,IAA7B;AACD;;AAWDc,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,QAAQ,EAAE,KAAKb,YADjB;AAEE,MAAA,KAAK,EAAE,KAAKF,KAAL,CAAWC,IAFpB;AAGE,MAAA,SAAS,EAAC,cAHZ;AAIE,MAAA,IAAI,EAAC,IAJP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,eAUE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,uBAAuB,EAAE,KAAKM,UAAL,CAAgB,KAAKP,KAAL,CAAWC,IAA3B,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAVF,CADF,CADF;AAkBD;;AApDyB;;AAsD5B,eAAeF,GAAf","sourcesContent":["import './App.css';\n\nimport React, { Component } from 'react';\n\nimport marked from 'marked';\n\nimport { sampleText } from './sampleText';\n\nclass App extends Component {\n  state = {\n    text: sampleText\n  }\n\n  // quand le Component est monté, vas chercher le texte dans le localStorage\n  componentDidMount() {\n    const text = localStorage.getItem('text')\n    // Si le texte n'existe pas (complètement effacé), alors réaffiche le texte du début\n    if (text) {\n      this.setState({ text })\n    } else {\n      this.setState({ text: sampleText })\n    }\n\n    this.setState({ text })\n  }\n\n  // à chaque mise à jour du Component, enregistre le contenu du texte en temps réel dans le localStorage\n  componentDidUpdate() {\n    const { text } = this.state\n    localStorage.setItem('text', text)\n  }\n\n  handleChange = event => {\n    const text = event.target.value\n    this.setState({ text })\n  }\n  renderText = text => {\n    const __html = marked(text, { sanitize: true })\n    return { __html }\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-sm-6\">\n            <textarea\n              onChange={this.handleChange}\n              value={this.state.text}\n              className=\"form-control\"\n              rows=\"35\">\n\n            </textarea>\n          </div>\n          <div className=\"col-sm-6\">\n            <div dangerouslySetInnerHTML={this.renderText(this.state.text)}></div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}